### Технічне завдання на розробку додатка піцерії

#### 1. **Загальний опис**
Необхідно створити веб-додаток для піцерії на React, який дозволить користувачам переглядати меню піцерії, вибирати страви,
додавати їх до кошика та оформляти замовлення. В меню мають бути дві категорії: **Піца** і **Напої**.

#### 2. **Функціональні вимоги**

##### 2.1. **Категорії меню**
У додатку повинні бути дві основні категорії:
- **Піца** — містить список різних видів піци з можливістю вибору розміру та додаткових опцій.
- **Напої** — містить список напоїв, доступних для замовлення.

##### 2.2. **Піца**
- Кожна піца має такі властивості:
- Назва піци.
- Опис (інгредієнти).
- Вибір розміру: **Мала**, **Середня**, **Велика** (кожен розмір має свій ціновий діапазон).
- Вибір типу тіста: **Традиційне** або **Тонке**.
- Можливість додати до піци додаткові інгредієнти (наприклад, сир, ковбаски, гриби), кожен інгредієнт має окрему вартість.
- Ціна залежить від розміру піци та вибору додаткових інгредієнтів.

##### 2.3. **Напої**
- Кожен напій має такі властивості:
- Назва.
- Об’єм (наприклад, 0.33 л, 0.5 л, 1 л).
- Ціна.
  
##### 2.4. **Кошик**
- Користувач може додавати піцу та напої до кошика.
- Для кожної піци у кошику повинні зберігатися обрані параметри (розмір, тип тіста, додаткові інгредієнти).
- Користувач може змінювати кількість піц та напоїв у кошику або видаляти їх.
- Автоматичний підрахунок загальної вартості замовлення з урахуванням вибраних розмірів, додаткових інгредієнтів та кількості товарів.

##### 2.5. **Оформлення замовлення**
- Після додавання страв до кошика користувач може перейти до оформлення замовлення.
- Потрібно заповнити форму з контактною інформацією:
  - Ім'я.
  - Номер телефону.
  - Адреса доставки.
  - Додаткові коментарі до замовлення (необов’язкове поле).
- Підтвердження замовлення з відображенням інформації про страви, кількість і загальну суму.

#### 3. **Технічні вимоги**

##### 3.1. **Технологічний стек**
- **Frontend**: React (версія 16.8 і вище).
- **Стан**: Використання `useState`, `useEffect` для управління станом кошика та меню.
- **Роутинг**: Використання `React Router` для навігації між категоріями та сторінкою кошика.
- **Стили**: CSS-in-JS або SCSS для створення адаптивного дизайну.

##### 3.2. **Компоненти**
- **Menu** — головний компонент, який відображає категорії меню.
- **PizzaItem** — компонент для відображення інформації про піцу з можливістю вибору розміру, тіста та додаткових інгредієнтів.
- **DrinkItem** — компонент для відображення інформації про напій з можливістю вибору об'єму.
- **Cart** — компонент кошика, де користувач може переглядати обрані страви, змінювати їх кількість або видаляти.
- **OrderForm** — компонент для оформлення замовлення, який містить форму введення контактної інформації.

##### 3.3. **Логіка кошика**
- Дані про піци та напої зберігаються у стані додатка.
- При додаванні товарів до кошика зберігається інформація про всі обрані опції (розмір піци, тип тіста, додаткові інгредієнти, кількість).
- Реалізувати функцію зміни кількості товарів та видалення з кошика.
- Загальна сума повинна автоматично оновлюватися при кожній зміні у кошику.

#### 4. **Валідація**
- Перевірка валідації контактної інформації під час оформлення замовлення.

#### 5. **Додаткові вимоги**
- Адаптивний дизайн для коректного відображення на мобільних пристроях.
- Можливість локального збереження замовлення (з використанням `localStorage`).

#### 6. **Терміни розробки**
На реалізацію проекту відводиться 12 днів.